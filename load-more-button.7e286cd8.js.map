{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,iEAUqC,SAAjCC,aAAaC,QAAQ,UACvB,EAAAC,EAAAC,eAGF,IAAIC,EAAc,KACdC,EAAe,KACbC,EAAU,IAAIC,EAAAC,GAAJ,CAAmB,cAEnCC,EAAAC,SAASC,KAAKC,iBAAiB,UAO/B,SAAqBC,GAgBnB,GAfAA,EAAIC,iBACJL,EAAAC,SAASK,IAAIC,UAAY,GACzBX,EAAe,KACfD,EAAc,EAEdC,EAAeQ,EAAII,cAAcP,SAASQ,YAAYC,MACnDC,OACAC,MAAM,KACNC,QAAO,SAAAC,G,MAAiB,KAATA,C,IACfC,KAAK,KACLC,cACHZ,EAAII,cAAcP,SAASQ,YAAYC,MAAQd,EAC5CgB,MAAM,KACNG,KAAK,KAEa,KAAjBnB,EACF,OAAOP,EAAA4B,OAAOC,QACZ,gFAIJ,EAAAC,EAAAC,aAAYxB,EAAcD,GACvB0B,MAAK,SAAAC,G,QAAGC,KAAQC,EAASC,EAATD,UAAWE,EAAID,EAAJC,KAC1B,GAAkB,IAAdF,EACF,OAAOnC,EAAA4B,OAAOU,QACZ,4EAIJtC,EAAA4B,OAAOW,QAAQ,oBAA8BC,OAAVL,EAAU,cAE7C,EAAA/B,EAAAqC,cAAaJ,GACb7B,EAAQkC,UAEJpC,EAAc6B,EAAYL,EAAAa,QAC5BhC,EAAAC,SAASgC,YAAYC,UAAUC,OAAO,oBAEtCnC,EAAAC,SAASmC,MAAMF,UAAUC,OAAO,mBAChCE,EAAQC,QAAQtC,EAAAC,SAASmC,O,IAG5BG,OAAM,SAAAC,G,OAAOnD,EAAA4B,OAAOU,QAAQa,EAAIC,Q,IAChCC,SAAQ,W,OAAMC,EAAAC,QAAQT,Q,OAjD3BnC,EAAAC,SAASgC,YAAY9B,iBAAiB,SAoDtC,WACER,KACA,EAAAwB,EAAAC,aAAYxB,EAAcD,GACvB0B,MAAK,SAAAC,G,QAAGC,KAAQC,EAASC,EAATD,UAAWE,EAAID,EAAJC,MAC1B,EAAAjC,EAAAqC,cAAaJ,GACb7B,EAAQkC,UAEJpC,GAAe6B,EAAYL,EAAAa,UAC7BhC,EAAAC,SAASgC,YAAYC,UAAUW,IAAI,mBACnC7C,EAAAC,SAASmC,MAAMF,UAAUC,OAAO,mBAChCE,EAAQC,QAAQtC,EAAAC,SAASmC,O,IAG5BG,OAAM,SAAAC,G,OAAOnD,EAAA4B,OAAOU,QAAQa,EAAIC,Q,IAChCC,SAAQ,W,OAAMC,EAAAC,QAAQT,Q,OAjE3BnC,EAAAC,SAAS6C,aAAa3C,iBAAiB,QAASV,EAAAsD,cAChD/C,EAAAC,SAAS+C,YAAY7C,iBAAiB,QAASV,EAAAC,aAE/C,IAAM2C,EAAU,IAAIY,sBAiEpB,SAAqBC,GACnBA,EAAQC,SAAQ,SAAAC,GACVA,EAAMC,iBACRhE,EAAA4B,OAAOC,QACL,8DAEFmB,EAAQiB,UAAUtD,EAAAC,SAASmC,OAC3BpC,EAAAC,SAASmC,MAAMF,UAAUW,IAAI,mB,MAxEmB,CAAEU,WAAY,Q","sources":["src/js/load-more-button.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { elements } from './my-modules/elements';\nimport { createMarkup, handlerLight, handlerDark } from './my-modules/helpers';\nimport { serviceImgs, perPage } from './my-modules/pixabay-api';\n\nif (localStorage.getItem('them') === 'dark') {\n  handlerDark();\n}\n\nlet currentPage = null;\nlet currentValue = null;\nconst gallery = new SimpleLightbox('.gallery a');\n\nelements.form.addEventListener('submit', handlerForm);\nelements.loadMoreBtn.addEventListener('click', handlerLoadMore);\nelements.lightThemBtn.addEventListener('click', handlerLight);\nelements.darkThemBtn.addEventListener('click', handlerDark);\n\nconst warning = new IntersectionObserver(lastElement, { rootMargin: '10px' });\n\nfunction handlerForm(evt) {\n  evt.preventDefault();\n  elements.box.innerHTML = '';\n  currentValue = null;\n  currentPage = 1;\n\n  currentValue = evt.currentTarget.elements.searchQuery.value\n    .trim()\n    .split(' ')\n    .filter(elem => elem !== '')\n    .join('+')\n    .toLowerCase();\n  evt.currentTarget.elements.searchQuery.value = currentValue\n    .split('+')\n    .join(' ');\n\n  if (currentValue === '') {\n    return Notify.warning(\n      \"We can't find this, because you haven't entered anything. Please try again.\"\n    );\n  }\n\n  serviceImgs(currentValue, currentPage)\n    .then(({ data: { totalHits, hits } }) => {\n      if (totalHits === 0) {\n        return Notify.failure(\n          'Sorry, there are no images matching your search query. Please try again.'\n        );\n      }\n\n      Notify.success(`Hooray! We found ${totalHits} images.`);\n\n      createMarkup(hits);\n      gallery.refresh();\n\n      if (currentPage < totalHits / perPage) {\n        elements.loadMoreBtn.classList.remove('visually-hidden');\n      } else {\n        elements.guard.classList.remove('visually-hidden');\n        warning.observe(elements.guard);\n      }\n    })\n    .catch(err => Notify.failure(err.message))\n    .finally(() => Loading.remove());\n}\n\nfunction handlerLoadMore() {\n  currentPage++;\n  serviceImgs(currentValue, currentPage)\n    .then(({ data: { totalHits, hits } }) => {\n      createMarkup(hits);\n      gallery.refresh();\n\n      if (currentPage >= totalHits / perPage) {\n        elements.loadMoreBtn.classList.add('visually-hidden');\n        elements.guard.classList.remove('visually-hidden');\n        warning.observe(elements.guard);\n      }\n    })\n    .catch(err => Notify.failure(err.message))\n    .finally(() => Loading.remove());\n}\n\nfunction lastElement(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      Notify.warning(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n      warning.unobserve(elements.guard);\n      elements.guard.classList.add('visually-hidden');\n    }\n  });\n}\n"],"names":["$h6c0i","parcelRequire","localStorage","getItem","$jzNL2","handlerDark","$150e21129e09c1e0$var$currentPage","$150e21129e09c1e0$var$currentValue","$150e21129e09c1e0$var$gallery","$parcel$interopDefault","$5IjG7","$bcAb9","elements","form","addEventListener","evt","preventDefault","box","innerHTML","currentTarget","searchQuery","value","trim","split","filter","elem","join","toLowerCase","Notify","warning","$LjDjN","serviceImgs","then","param","data","totalHits","_data","hits","failure","success","concat","createMarkup","refresh","perPage","loadMoreBtn","classList","remove","guard","$150e21129e09c1e0$var$warning","observe","catch","err","message","finally","$7rQOT","Loading","add","lightThemBtn","handlerLight","darkThemBtn","IntersectionObserver","entries","forEach","entry","isIntersecting","unobserve","rootMargin"],"version":3,"file":"load-more-button.7e286cd8.js.map"}