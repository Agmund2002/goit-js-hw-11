{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,iEAUqC,SAAjCC,aAAaC,QAAQ,UACvB,EAAAC,EAAAC,eAGF,IAAIC,EAAc,KACdC,EAAe,KACbC,EAAU,IAAIC,EAAAC,GAAJ,CAAmB,cAEnCC,EAAAC,SAASC,KAAKC,iBAAiB,UAS/B,SAAqBC,GAiBnB,GAhBAA,EAAIC,iBACJL,EAAAC,SAASK,MAAMC,UAAUC,IAAI,mBAC7BR,EAAAC,SAASQ,IAAIC,UAAY,GACzBd,EAAe,KACfD,EAAc,EAEdC,EAAeQ,EAAIO,cAAcV,SAASW,YAAYC,MACnDC,OACAC,MAAM,KACNC,QAAO,SAAAC,G,MAAiB,KAATA,C,IACfC,KAAK,KACLC,cACHf,EAAIO,cAAcV,SAASW,YAAYC,MAAQjB,EAC5CmB,MAAM,KACNG,KAAK,KAEa,KAAjBtB,EACF,OAAOP,EAAA+B,OAAOC,QACZ,gFAIJ,EAAAC,EAAAC,aAAY3B,EAAcD,GACvB6B,MAAK,SAAAC,G,QAAGC,KAAQC,EAASC,EAATD,UAAWE,EAAID,EAAJC,KAC1B,GAAkB,IAAdF,EACF,OAAOtC,EAAA+B,OAAOU,QACZ,4EAIJzC,EAAA+B,OAAOW,QAAQ,oBAA8BC,OAAVL,EAAU,cAE7C,EAAAlC,EAAAwC,cAAaJ,GACbhC,EAAQqC,UAERlC,EAAAC,SAASK,MAAMC,UAAU4B,OAAO,mBAC5BxC,EAAcgC,EAAYL,EAAAc,QAC5BC,EAAeC,QAAQtC,EAAAC,SAASK,OAEhCiC,EAAQD,QAAQtC,EAAAC,SAASK,M,IAG5BkC,OAAM,SAAAC,G,OAAOpD,EAAA+B,OAAOU,QAAQW,EAAIC,Q,IAChCC,SAAQ,W,OAAMC,EAAAC,QAAQV,Q,OApD3BnC,EAAAC,SAAS6C,aAAa3C,iBAAiB,QAASV,EAAAsD,cAChD/C,EAAAC,SAAS+C,YAAY7C,iBAAiB,QAASV,EAAAC,aAE/C,IAAM6C,EAAU,IAAIU,sBAwEpB,SAAqBC,GACnBA,EAAQC,SAAQ,SAAAC,GACVA,EAAMC,iBACRhE,EAAA+B,OAAOC,QACL,8DAEFkB,EAAQe,UAAUtD,EAAAC,SAASK,O,MA9EqB,CAAEiD,WAAY,SAC9DlB,EAAiB,IAAIY,sBAmD3B,SAAuBC,GACrBA,EAAQC,SAAQ,SAAAC,GACVA,EAAMC,iBACR1D,KACA,EAAA2B,EAAAC,aAAY3B,EAAcD,GACvB6B,MAAK,SAAAC,G,QAAGC,KAAQC,EAASC,EAATD,UAAWE,EAAID,EAAJC,MAC1B,EAAApC,EAAAwC,cAAaJ,GACbhC,EAAQqC,UAEJvC,GAAegC,EAAYL,EAAAc,UAC7BG,EAAQD,QAAQtC,EAAAC,SAASK,OACzB+B,EAAeiB,UAAUtD,EAAAC,SAASK,O,IAGrCkC,OAAM,SAAAC,G,OAAOpD,EAAA+B,OAAOU,QAAQW,EAAIC,Q,IAChCC,SAAQ,W,OAAMC,EAAAC,QAAQV,Q,UAlEgC,CAC7DoB,WAAY,S","sources":["src/js/infinite-scroll.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { elements } from './my-modules/elements';\nimport { createMarkup, handlerLight, handlerDark } from './my-modules/helpers';\nimport { serviceImgs, perPage } from './my-modules/pixabay-api';\n\nif (localStorage.getItem('them') === 'dark') {\n  handlerDark();\n}\n\nlet currentPage = null;\nlet currentValue = null;\nconst gallery = new SimpleLightbox('.gallery a');\n\nelements.form.addEventListener('submit', handlerForm);\nelements.lightThemBtn.addEventListener('click', handlerLight);\nelements.darkThemBtn.addEventListener('click', handlerDark);\n\nconst warning = new IntersectionObserver(lastElement, { rootMargin: '10px' });\nconst infiniteScroll = new IntersectionObserver(handlerScroll, {\n  rootMargin: '500px',\n});\n\nfunction handlerForm(evt) {\n  evt.preventDefault();\n  elements.guard.classList.add('visually-hidden');\n  elements.box.innerHTML = '';\n  currentValue = null;\n  currentPage = 1;\n\n  currentValue = evt.currentTarget.elements.searchQuery.value\n    .trim()\n    .split(' ')\n    .filter(elem => elem !== '')\n    .join('+')\n    .toLowerCase();\n  evt.currentTarget.elements.searchQuery.value = currentValue\n    .split('+')\n    .join(' ');\n\n  if (currentValue === '') {\n    return Notify.warning(\n      \"We can't find this, because you haven't entered anything. Please try again.\"\n    );\n  }\n\n  serviceImgs(currentValue, currentPage)\n    .then(({ data: { totalHits, hits } }) => {\n      if (totalHits === 0) {\n        return Notify.failure(\n          'Sorry, there are no images matching your search query. Please try again.'\n        );\n      }\n\n      Notify.success(`Hooray! We found ${totalHits} images.`);\n\n      createMarkup(hits);\n      gallery.refresh();\n\n      elements.guard.classList.remove('visually-hidden');\n      if (currentPage < totalHits / perPage) {\n        infiniteScroll.observe(elements.guard);\n      } else {\n        warning.observe(elements.guard);\n      }\n    })\n    .catch(err => Notify.failure(err.message))\n    .finally(() => Loading.remove());\n}\n\nfunction handlerScroll(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage++;\n      serviceImgs(currentValue, currentPage)\n        .then(({ data: { totalHits, hits } }) => {\n          createMarkup(hits);\n          gallery.refresh();\n\n          if (currentPage >= totalHits / perPage) {\n            warning.observe(elements.guard);\n            infiniteScroll.unobserve(elements.guard);\n          }\n        })\n        .catch(err => Notify.failure(err.message))\n        .finally(() => Loading.remove());\n    }\n  });\n}\n\nfunction lastElement(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      Notify.warning(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n      warning.unobserve(elements.guard);\n    }\n  });\n}\n"],"names":["$h6c0i","parcelRequire","localStorage","getItem","$jzNL2","handlerDark","$93b54f497d416715$var$currentPage","$93b54f497d416715$var$currentValue","$93b54f497d416715$var$gallery","$parcel$interopDefault","$5IjG7","$bcAb9","elements","form","addEventListener","evt","preventDefault","guard","classList","add","box","innerHTML","currentTarget","searchQuery","value","trim","split","filter","elem","join","toLowerCase","Notify","warning","$LjDjN","serviceImgs","then","param","data","totalHits","_data","hits","failure","success","concat","createMarkup","refresh","remove","perPage","$93b54f497d416715$var$infiniteScroll","observe","$93b54f497d416715$var$warning","catch","err","message","finally","$7rQOT","Loading","lightThemBtn","handlerLight","darkThemBtn","IntersectionObserver","entries","forEach","entry","isIntersecting","unobserve","rootMargin"],"version":3,"file":"infinite-scroll.58c17483.js.map"}